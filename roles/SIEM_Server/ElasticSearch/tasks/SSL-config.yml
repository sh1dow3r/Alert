---

- name: Check if elastic-CA.p12 exists
  stat:
    path: /usr/share/elasticsearch/elastic-CA.p12
  register: stat_result1

- name: create CA for elastic 
  become: yes
  command:  '{{ es_home }}/bin/elasticsearch-certutil ca --out ./elastic-CA.p12 --pass "" '
  when: not stat_result1.stat.exists

- name: Check that the elastic-keystore.p12 exists
  stat:
    path: /usr/share/elasticsearch/elastic-keystore.p12
  register: stat_result2

- name: create cert for elastic 
  become: yes
  command:  '{{ es_home }}/bin/elasticsearch-certutil cert --ca ./elastic-CA.p12 --out ./elastic-keystore.p12 --pass "" '
  when: not stat_result2.stat.exists
 

- name: Copy cert to the proper location
  copy:
    src: '{{ es_home }}/elastic-certificates.p12'
    dest: '{{ es_config_dir }}/elastic-certificates.p12'
    remote_src: yes
    mode: '0644'
  become: yes


- name: Set SSL config for elasticsearch 
  lineinfile:
    dest: "{{ es_config_dir }}/elasticsearch.yml"
    line: "{{ item.line }}"
  with_items:
    - { line: 'xpack.security.enabled: true' }
    - { line: 'xpack.security.http.ssl.enabled: true'}
    - { line: 'xpack.security.transport.ssl.enabled: true' }
    - { line: 'xpack.security.transport.ssl.verification_mode: certificate' }
    - { line: 'xpack.security.transport.ssl.keystore.path: elastic-certificates.p12' }
    - { line: 'xpack.security.transport.ssl.truststore.path: elastic-certificates.p12' }
  become: yes
  notify: Restart - ElasticSearch


xpack.security.http.ssl.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.http.ssl.key: certs/node1.key
xpack.security.http.ssl.certificate: certs/node1.crt
xpack.security.http.ssl.certificate_authorities: certs/ca.crt
xpack.security.transport.ssl.key: certs/node1.key
xpack.security.transport.ssl.certificate: certs/node1.crt
xpack.security.transport.ssl.certificate_authorities: certs/ca.crt